name: Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 mypy isort pylint pytest pytest-cov
    
    - name: Run comprehensive linting
      run: |
        echo "Running pylint for additional code quality checks..."
        pylint src/ --disable=C0114,C0115,C0116 --output-format=text || true
    
    - name: Check code complexity
      run: |
        pip install radon
        echo "Checking code complexity..."
        radon cc src/ --show-complexity --min=B
        radon mi src/ --show
    
    - name: Check for code smells
      run: |
        pip install vulture
        echo "Checking for dead code..."
        vulture src/ --min-confidence 80 || true

  dependency-audit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pip-audit safety
    
    - name: Audit dependencies for vulnerabilities
      run: |
        echo "Auditing dependencies for security vulnerabilities..."
        pip-audit --desc || true
        safety check --json || true
    
    - name: Check for outdated dependencies
      run: |
        echo "Checking for outdated dependencies..."
        pip list --outdated

  documentation-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pydocstyle
    
    - name: Check docstring quality
      run: |
        echo "Checking docstring quality..."
        pydocstyle src/ --convention=google || true
    
    - name: Validate documentation links
      run: |
        echo "Validating documentation links..."
        python scripts/validate_docs.py
    
    - name: Check README examples
      run: |
        echo "Validating README code examples..."
        python scripts/validate_readme_examples.py

  performance-monitoring:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark memory-profiler
    
    - name: Run performance benchmarks
      run: |
        echo "Running performance benchmarks..."
        python tests/performance/test_irr_performance.py
    
    - name: Memory usage profiling
      run: |
        echo "Profiling memory usage..."
        python scripts/profile_memory.py
    
    - name: Store performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance_results.json